// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: agentexe.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AgentEXEResponseStatus int32

const (
	AgentEXEResponseStatus_FAIL    AgentEXEResponseStatus = 0 /// Success
	AgentEXEResponseStatus_SUCCESS AgentEXEResponseStatus = 1 /// Failed
)

// Enum value maps for AgentEXEResponseStatus.
var (
	AgentEXEResponseStatus_name = map[int32]string{
		0: "FAIL",
		1: "SUCCESS",
	}
	AgentEXEResponseStatus_value = map[string]int32{
		"FAIL":    0,
		"SUCCESS": 1,
	}
)

func (x AgentEXEResponseStatus) Enum() *AgentEXEResponseStatus {
	p := new(AgentEXEResponseStatus)
	*p = x
	return p
}

func (x AgentEXEResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentEXEResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_agentexe_proto_enumTypes[0].Descriptor()
}

func (AgentEXEResponseStatus) Type() protoreflect.EnumType {
	return &file_agentexe_proto_enumTypes[0]
}

func (x AgentEXEResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentEXEResponseStatus.Descriptor instead.
func (AgentEXEResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_agentexe_proto_rawDescGZIP(), []int{0}
}

//*
// Represents the params to identify agent.
type AgentEXERequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	// IP of agent
	AgentIp     string       `protobuf:"bytes,1,opt,name=agent_ip,proto3" json:"agent_ip,omitempty"`
	ProfileIp   int64        `protobuf:"varint,2,opt,name=profile_ip,proto3" json:"profile_ip,omitempty"`
	ControlId   int64        `protobuf:"varint,3,opt,name=control_id,proto3" json:"control_id,omitempty"`
	ControlType int64        `protobuf:"varint,4,opt,name=control_type,proto3" json:"control_type,omitempty"`
	TunnelData  []*anypb.Any `protobuf:"bytes,5,rep,name=tunnel_data,proto3" json:"tunnel_data,omitempty"`
}

func (x *AgentEXERequest) Reset() {
	*x = AgentEXERequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentexe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentEXERequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentEXERequest) ProtoMessage() {}

func (x *AgentEXERequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentexe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentEXERequest.ProtoReflect.Descriptor instead.
func (*AgentEXERequest) Descriptor() ([]byte, []int) {
	return file_agentexe_proto_rawDescGZIP(), []int{0}
}

func (x *AgentEXERequest) GetAgentIp() string {
	if x != nil {
		return x.AgentIp
	}
	return ""
}

func (x *AgentEXERequest) GetProfileIp() int64 {
	if x != nil {
		return x.ProfileIp
	}
	return 0
}

func (x *AgentEXERequest) GetControlId() int64 {
	if x != nil {
		return x.ControlId
	}
	return 0
}

func (x *AgentEXERequest) GetControlType() int64 {
	if x != nil {
		return x.ControlType
	}
	return 0
}

func (x *AgentEXERequest) GetTunnelData() []*anypb.Any {
	if x != nil {
		return x.TunnelData
	}
	return nil
}

type AgentEXEResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	// Status
	AgentEXEResponseStatus bool `protobuf:"varint,1,opt,name=AgentEXEResponseStatus,json=status,proto3" json:"AgentEXEResponseStatus,omitempty"`
	//*
	// Slice of agent object
	Agentexes []*AgentEXERequest `protobuf:"bytes,2,rep,name=agentexes,json=data,proto3" json:"agentexes,omitempty"`
}

func (x *AgentEXEResponse) Reset() {
	*x = AgentEXEResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentexe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentEXEResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentEXEResponse) ProtoMessage() {}

func (x *AgentEXEResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentexe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentEXEResponse.ProtoReflect.Descriptor instead.
func (*AgentEXEResponse) Descriptor() ([]byte, []int) {
	return file_agentexe_proto_rawDescGZIP(), []int{1}
}

func (x *AgentEXEResponse) GetAgentEXEResponseStatus() bool {
	if x != nil {
		return x.AgentEXEResponseStatus
	}
	return false
}

func (x *AgentEXEResponse) GetAgentexes() []*AgentEXERequest {
	if x != nil {
		return x.Agentexes
	}
	return nil
}

var File_agentexe_proto protoreflect.FileDescriptor

var file_agentexe_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x65, 0x78, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x58, 0x45, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x0b, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6b,
	0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x58, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x58, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x58, 0x45, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x2f, 0x0a, 0x16, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x45, 0x58, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x32, 0x94, 0x01, 0x0a,
	0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x58, 0x45, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x42, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x55, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45,
	0x58, 0x45, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x58, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x6c,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x58,
	0x45, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x58, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2d,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agentexe_proto_rawDescOnce sync.Once
	file_agentexe_proto_rawDescData = file_agentexe_proto_rawDesc
)

func file_agentexe_proto_rawDescGZIP() []byte {
	file_agentexe_proto_rawDescOnce.Do(func() {
		file_agentexe_proto_rawDescData = protoimpl.X.CompressGZIP(file_agentexe_proto_rawDescData)
	})
	return file_agentexe_proto_rawDescData
}

var file_agentexe_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_agentexe_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_agentexe_proto_goTypes = []interface{}{
	(AgentEXEResponseStatus)(0), // 0: proto.AgentEXEResponseStatus
	(*AgentEXERequest)(nil),     // 1: proto.AgentEXERequest
	(*AgentEXEResponse)(nil),    // 2: proto.AgentEXEResponse
	(*anypb.Any)(nil),           // 3: google.protobuf.Any
}
var file_agentexe_proto_depIdxs = []int32{
	3, // 0: proto.AgentEXERequest.tunnel_data:type_name -> google.protobuf.Any
	1, // 1: proto.AgentEXEResponse.agentexes:type_name -> proto.AgentEXERequest
	1, // 2: proto.AgentEXEService.RunUrgentTask:input_type -> proto.AgentEXERequest
	1, // 3: proto.AgentEXEService.RunShell:input_type -> proto.AgentEXERequest
	2, // 4: proto.AgentEXEService.RunUrgentTask:output_type -> proto.AgentEXEResponse
	2, // 5: proto.AgentEXEService.RunShell:output_type -> proto.AgentEXEResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_agentexe_proto_init() }
func file_agentexe_proto_init() {
	if File_agentexe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_agentexe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentEXERequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentexe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentEXEResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agentexe_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agentexe_proto_goTypes,
		DependencyIndexes: file_agentexe_proto_depIdxs,
		EnumInfos:         file_agentexe_proto_enumTypes,
		MessageInfos:      file_agentexe_proto_msgTypes,
	}.Build()
	File_agentexe_proto = out.File
	file_agentexe_proto_rawDesc = nil
	file_agentexe_proto_goTypes = nil
	file_agentexe_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AgentEXEServiceClient is the client API for AgentEXEService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentEXEServiceClient interface {
	//*
	// Used to run urgent task
	RunUrgentTask(ctx context.Context, in *AgentEXERequest, opts ...grpc.CallOption) (*AgentEXEResponse, error)
	//*
	// Used to run command shell on linux
	RunShell(ctx context.Context, in *AgentEXERequest, opts ...grpc.CallOption) (*AgentEXEResponse, error)
}

type agentEXEServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentEXEServiceClient(cc grpc.ClientConnInterface) AgentEXEServiceClient {
	return &agentEXEServiceClient{cc}
}

func (c *agentEXEServiceClient) RunUrgentTask(ctx context.Context, in *AgentEXERequest, opts ...grpc.CallOption) (*AgentEXEResponse, error) {
	out := new(AgentEXEResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentEXEService/RunUrgentTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentEXEServiceClient) RunShell(ctx context.Context, in *AgentEXERequest, opts ...grpc.CallOption) (*AgentEXEResponse, error) {
	out := new(AgentEXEResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentEXEService/RunShell", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentEXEServiceServer is the server API for AgentEXEService service.
type AgentEXEServiceServer interface {
	//*
	// Used to run urgent task
	RunUrgentTask(context.Context, *AgentEXERequest) (*AgentEXEResponse, error)
	//*
	// Used to run command shell on linux
	RunShell(context.Context, *AgentEXERequest) (*AgentEXEResponse, error)
}

// UnimplementedAgentEXEServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAgentEXEServiceServer struct {
}

func (*UnimplementedAgentEXEServiceServer) RunUrgentTask(context.Context, *AgentEXERequest) (*AgentEXEResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunUrgentTask not implemented")
}
func (*UnimplementedAgentEXEServiceServer) RunShell(context.Context, *AgentEXERequest) (*AgentEXEResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunShell not implemented")
}

func RegisterAgentEXEServiceServer(s *grpc.Server, srv AgentEXEServiceServer) {
	s.RegisterService(&_AgentEXEService_serviceDesc, srv)
}

func _AgentEXEService_RunUrgentTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentEXERequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentEXEServiceServer).RunUrgentTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentEXEService/RunUrgentTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentEXEServiceServer).RunUrgentTask(ctx, req.(*AgentEXERequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentEXEService_RunShell_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentEXERequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentEXEServiceServer).RunShell(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentEXEService/RunShell",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentEXEServiceServer).RunShell(ctx, req.(*AgentEXERequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentEXEService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AgentEXEService",
	HandlerType: (*AgentEXEServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RunUrgentTask",
			Handler:    _AgentEXEService_RunUrgentTask_Handler,
		},
		{
			MethodName: "RunShell",
			Handler:    _AgentEXEService_RunShell_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agentexe.proto",
}
